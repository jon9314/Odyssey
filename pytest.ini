[pytest]
norecursedirs = .git .venv odyssey/scripts
pythonpath = .
python_files = test_*.py tests_*.py *_test.py *_tests.py
python_classes = Test* *Tests
python_functions = test_*
addopts = --color=yes -ra -q --disable-warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
# Example: Filter specific warnings
# ignore:.*Some specific warning text to ignore:DeprecationWarning:some_module
# ignore:function ham\(\) is deprecated:DeprecationWarning
# ignore:Call to deprecated create_connection:DeprecationWarning
# ignore:distutils Version classes are deprecated:DeprecationWarning

# Set testpaths to avoid scanning the entire repo if not needed,
# though default behavior is usually fine.
# testpaths = tests odyssey/tests

# Example of environment variables for tests, if needed:
# env =
#     PYTHONPATH=.
#     MY_TEST_VAR=value
#     ANOTHER_VAR=another_value
# Note: PYTHONPATH=. is often handled automatically by pytest based on rootdir.

# Example of customizing test report output:
# report_header = Custom Project Test Report
# log_cli = true
# log_cli_level = INFO
# log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
# log_cli_date_format = %Y-%m-%d %H:%M:%S

# Example: Default markers
# markers =
#     slow: marks tests as slow to run
#     integration: marks integration tests
#     serial

# Add any other pytest configurations you need.
# For example, to specify the minimum pytest version:
# minversion = 6.0

# To use a custom testmon (if installed and configured):
# testmon_branches = true
# testmon_single_file_mode = true

# Coverage settings (if using pytest-cov):
# cov = odyssey
# cov_report = term-missing
# cov_report = html:var/coverage_reports/html
# cov_report = xml:var/coverage_reports/coverage.xml
# cov_fail_under = 80 # Example: fail if coverage is below 80%

# Options for xdist (if using pytest-xdist for parallel tests):
# addopts = -n auto # Use as many workers as CPU cores
# looponfailroots = odyssey tests # For pytest-watch or similar

# Python path settings (though pytest usually handles this well)
# pythonpath = . src
# (This tells pytest to add current dir and 'src' to sys.path)
